$('#result').removeClass('d-none')
$('#result').html('<%= j render partial: "result" %>')

$('#close_results').click(function() {
  $('#result').html("");
});

// Activate and clear results buttons
$('.result').removeClass('disabled')
$('.result').removeClass('active')

//Copy results
$('#copy_results').click(function() {
  // Get the text from the div
  let rawText = $('#copy_box').text();

  // Split the text into lines
  let lines = rawText.split('\n');

  // Trim leading spaces from each line
  let trimmedLines = lines.map(line => line.trimStart());

  // Rejoin the lines into a single string with newline characters
  let cleanedText = trimmedLines.join('\n');

  $('#result_card').addClass( "highlight", 250, callback )

  function callback() {
    setTimeout(function() {
      $('#result_card').removeClass( "highlight" );
    }, 250 );
  }

  navigator.clipboard.writeText(cleanedText)
});

<% if @fortune == false %>
  $('.btn-results').click(function() {
    let value = $(this).data('value')
    let type = $(this).data('type')

    let effects_names_array = [
      "<%= t('missions.index.effect_neutral') %>",
      "<%= t('missions.index.effect_good') %>",
      "<%= t('missions.index.effect_bad') %>"
    ]

    let position_names_array = [
      "<%= t('missions.index.position_neutral') %>",
      "<%= t('missions.index.position_good') %>",
      "<%= t('missions.index.position_bad') %>"
    ]

    let position_results = [
      `<%= @result["result"][0].join('</span><span class="fw-bold"> o </span><span class="text-light border border-info p-2 my-1 d-inline-block small">'.html_safe).html_safe %>`,
      `<%= @result["result"][1].join('</span><span class="fw-bold"> o </span><span class="text-light border border-info p-2 my-1 d-inline-block small">'.html_safe).html_safe %>`,
      `<%= @result["result"][-1].join('</span><span class="fw-bold"> o </span><span class="text-light border border-info p-2 my-1 d-inline-block small">'.html_safe).html_safe %>`
    ]

    let effect_results = [
      "",
      `<span class="text-light border border-info p-2 my-1 d-inline-block small"><%= @effect_major %></span>`,
      `<span class="text-light border border-info p-2 my-1 d-inline-block small"><%= @effect_minor %></span>`,
    ]

    let level = Math.max(-1, Math.min(1, (parseInt($('#' + type).data("level")) + value)));

    let position_results_text = `<span class="text-light border border-info p-2 my-1 d-inline-block small">` + position_results.at(level) + `</span>`
    let effect_results_text = effect_results.at(level)

    // Select the correct array based on type and get the corresponding text
    let selected_text;
    if (type === 'position') {
      selected_text = position_names_array.at(level);
      $('.consequences').html(position_results_text)
    } else if (type === 'effect') {
      selected_text = effects_names_array.at(level);
      $('.effect_results').html(effect_results_text)
    }

    $('.' + type).html(selected_text)

    $('#' + type).data("level", level)

    $('.' + type).addClass( "highlight", 250, callback )

    function callback() {
      setTimeout(function() {
        $('.' + type).removeClass( "highlight" );
      }, 250 );
    }
  });
<% end %>
