$(document).on('turbolinks:load', function () {
  if ($(".armies").length !== 0 ) {
    $.fn.copyArmies = function(){
      let message = "";

      //Loop through all checked CheckBoxes in GridView.
      $("input[type=checkbox]:visible:checked").each(function () {
          let row = $(this).closest("tr");
          if (row.hasClass("tablesorter-headerRow") == false) {
            message += "> * " + row.find('.army-data .visible').text().replace(/(\r\n|\n|\r)/gm, " ").replace(/\s+/g, " ").trim();
            message += "\n";
          }
      });

      navigator.clipboard.writeText(message)
    }

    // Recalculate stats
    $.fn.recalculateStats = function(){
        var countArmies = $('.checkbox_selectable:visible').length;
        var menArmies = 0
        var strArmies = 0
        $('tr:visible').each(function(){
          men = parseInt($(this).find('td.men').text());
          if (isNaN(men)) {
              men = 0;
          }
          menArmies += men;
          str = parseFloat($(this).find('td.strenght').text());
          if (isNaN(str)) {
              str = 0;
          }
          strArmies += str
        });
        $("#count").html(countArmies);
        $("#str").html(strArmies.toFixed(2));
        $("#men").html(menArmies);
    }

    // Filters
    $.fn.armyFilters = function(){
        var value = $("#filtertext").val().toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        var column = $("#filterselect").children("option:selected").val();
        $(".army_list").filterTable(value, column);
        var countArmies = $('.checkbox_selectable:visible').length;
        $("#count-visible").html(countArmies);
    }

    // Trigger filters
    $("#filterselect").on("change", function() {
        $.fn.armyFilters() // Why I need to remove the semicolons!!!!!
        $.fn.recalculateStats()
    });
    $("#filtertext").on("keyup", function() {
        $.fn.armyFilters()
        $.fn.recalculateStats()
    });

    // Add hidden checkboxes for mass edit options
    $.fn.checkboxSelectable = function(){
      $('.checkbox_selectable').change(function() {
        var form = $('#edit_multiple');
        var armyId = $(this).val();

        var hiddenInput = $('#army_ids_field');
        var selectedIds = hiddenInput.val().split(',').filter(Boolean); // Splits by comma and removes empty values

        if ($(this).is(':checked')) {
          // Add armyId if it's checked and not already in the list
          if (!selectedIds.includes(armyId)) {
            selectedIds.push(armyId);
          }
        } else {
          // Remove armyId if it's unchecked
          selectedIds = selectedIds.filter(id => id !== armyId);
        }

        // Update the hidden input field with the new list of ids, joined by commas
        hiddenInput.val(selectedIds.join(','));
      });
    }

    // Trigger armies load for master
    $('.armies-load').click(function() {
      // Find the parent form of the clicked element
      var form = $(this).closest('form');

      // Find the container that holds the 'armies-tab' and 'active' buttons
      var container = $(this).closest('form');
      // Find all buttons with classes 'armies-tab' and 'active' within the container
      var activeButtons = container.find('.armies-tab.active');
      var active_factions = [];
      // Iterate through the active buttons and get their values (IDs)
      activeButtons.each(function() {
        active_factions.push($(this).val());
      });

      if ($(this).hasClass('armies-tab')) {
        var faction_id = $(this).val()
        if ($(this).hasClass('armies-tab') && $(this).hasClass('active')) {
          // Removing armies
          var index = $.inArray(faction_id, active_factions); // Find the index of the value
          if (index !== -1) {
            active_factions.splice(index, 1); // Remove the value at the found index
          }
        } else {
          // Adding armies
          active_factions.push(faction_id);
        }
      }

      if ($(this).hasClass('visible-tab')) {
        var visible = $(this).val();
        $('#visible').val(visible);
      }

      var active_visibility = []
      if ($('#visible-true').hasClass('active')) {
        active_visibility.push(true);
      }
      if ($('#visible-false').hasClass('active')) {
        active_visibility.push(false);
      }

      $('#faction_id').val(faction_id);
      $('#visible').val(visible);
      $('#active_factions').val(JSON.stringify(active_factions));
      $('#active_visibility').val(active_visibility);

      $('#spinner-main').removeClass('d-none');

      $(this).closest('li').find('.spinner-border').removeClass('d-none');
      // Submit the form
      form.submit();
    });

    // Change strength str_display
    $('.btn.str_display').click(function () {
      $('.str_display').toggleClass('d-none visible')
    })


    $(".mass-copy").click(function () {
      $.fn.copyArmies();
    });

    $(".mass-copy-land").click(function () {
      $('.str_display').toggleClass('visible')
      $.fn.copyArmies();
      $('.str_display').toggleClass('visible')
    });



    // Trigger functions on load
    $.fn.recalculateStats();
    $.fn.checkboxSelectable();
  }
});
